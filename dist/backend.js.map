{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/./backend/src/model/mail.js","webpack://backend/./backend/src/main.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/locale/en-us.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/config/middleware/mail.js","webpack://backend/./backend/src/config/middleware/adapter/mail.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/controller/version.js","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/service/version.js","webpack://backend/./backend/src/service/mail.js","webpack://backend/./backend/src/models.js","webpack://backend/./backend/src/meta.js","webpack://backend/./backend/src/config/socketio/messageMail.js","webpack://backend/./backend/src/config/socketio/channelMail.js","webpack://backend/external \"require3\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA;AACA;AACA;AACA,kBAAkB,2BAA2B,wBAAwB,EAAE;AACvE;AACA;AACA;AACA;;;;;;;ACPA,eAAe,mBAAO,CAAC,CAAoB;AAC3C,gBAAgB,mBAAO,CAAC,CAAqB;AAC7C,eAAe,mBAAO,CAAC,CAAoB;AAC3C,oBAAoB,mBAAO,CAAC,CAAyB;;AAErD;;AAEA;AACA,iBAAiB,mBAAO,CAAC,EAAa;AACtC;AACA,mBAAmB,mBAAO,CAAC,EAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,EAAa;AACtC;AACA,eAAe,mBAAO,CAAC,EAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;;;;;;ACjCA;AACA,WAAW,mBAAO,CAAC,CAAmB;AACtC,WAAW,mBAAO,CAAC,CAAmB;AACtC;;;;;;;ACHA;AACA;AACA;;;;;;;ACFA;AACA;AACA;;;;;;;ACFA;AACA;AACA;;;;;;;ACFA,aAAa,mBAAO,CAAC,CAAsB;;AAE3C;AACA;AACA;;;;;;;ACJA;AACA,eAAe,mBAAO,CAAC,CAAmB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;;;;;;ACnBA,oBAAoB,mBAAO,CAAC,CAAwB;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;;;;;;AC/CA,gBAAgB,mBAAO,CAAC,EAAyB;;AAEjD;AACA;AACA;AACA,KAAK,oFAAoF;AACzF,KAAK,kFAAkF;AACvF,KAAK,iFAAiF;AACtF;AACA;AACA;;;;;;;ACVA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpBA,gBAAgB,mBAAO,CAAC,EAAsB;AAC9C,aAAa,mBAAO,CAAC,EAAmB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACrCA;;AAEA;;AAEA;AACA;AACA;;;;;;;ACNA,aAAa,mBAAO,CAAC,CAAiB;;AAEtC;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA,8BAA8B,mBAAO,CAAC,EAAkC;AACxE,8BAA8B,mBAAO,CAAC,EAAkC;AACxE;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,kBAAkB;AAClB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;AC7BA,oBAAoB,mBAAO,CAAC,CAAqB;;AAEjD;AACA,2BAA2B,uDAAuD;AAClF;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;AC9BA,iBAAiB,mBAAO,CAAC,EAAU;AACnC;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA,yBAAyB,oEAAoE;AAC7F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;ACrEA,qC","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = app => {\n  class Mail extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aMail', options: { disableDeleted: false } });\n    }\n  }\n  return Mail;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\nmodule.exports = app => {\n\n  // routes\n  const routes = require('./routes.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    routes,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    middlewares,\n    meta,\n  };\n\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // middlewares\n  config.middlewares = {\n    mail: {\n      global: false,\n      dependencies: 'instance',\n    },\n  };\n\n  // scenes\n  config.scenes = {\n    system: {\n      transport: {\n        host: '',\n        port: 0,\n        secure: false,\n        auth: {\n          user: '',\n          pass: '',\n        },\n        logger: false,\n        debug: false,\n      },\n      defaults: {\n        from: '',\n      },\n    },\n  };\n\n  return config;\n};\n","module.exports = {\n  'en-us': require('./locale/en-us.js'),\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = {\n  mailhostNotConfigAlert: 'Please set module config: [a-mail].scenes.system',\n};\n","module.exports = {\n  mailhostNotConfigAlert: '请设置模块配置: [a-mail].scenes.system',\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","const mail = require('./middleware/mail.js');\n\nmodule.exports = {\n  mail,\n};\n","// mail\nconst MailFn = require('./adapter/mail.js');\nconst MAIL = Symbol('CTX#__MAIL');\n\nmodule.exports = () => {\n  return async function mail(ctx, next) {\n    ctx.meta = ctx.meta || {};\n    // mail\n    Object.defineProperty(ctx.meta, 'mail', {\n      get() {\n        if (ctx.meta[MAIL] === undefined) {\n          ctx.meta[MAIL] = new (MailFn(ctx))();\n        }\n        return ctx.meta[MAIL];\n      },\n    });\n    // next\n    await next();\n  };\n};\n","const modelMailFn = require('../../../model/mail.js');\n\nconst Fn = module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Mail {\n\n    constructor(moduleName) {\n      this.moduleName = moduleName || ctx.module.info.relativeName;\n      this._modelMail = null;\n    }\n\n    // other module's mail\n    module(moduleName) {\n      return new (Fn(ctx))(moduleName);\n    }\n\n    get modelMail() {\n      if (!this._modelMail) this._modelMail = new (modelMailFn(ctx.app))(ctx);\n      return this._modelMail;\n    }\n\n    // send\n    async send({ scene, message }) {\n      // save to db\n      const res = await this.modelMail.insert({\n        scene,\n        status: 0,\n        mailto: message.to,\n        mailSubject: message.subject,\n        message: JSON.stringify(message),\n      });\n      const mailId = res.insertId;\n      // publish\n      ctx.tail(async () => {\n        await ctx.meta.io.publish({\n          message: {\n            content: { mailId },\n          },\n          messageClass: {\n            module: moduleInfo.relativeName,\n            messageClassName: 'mail',\n          },\n        });\n      });\n    }\n  }\n  return Mail;\n};\n","const version = require('./controller/version.js');\n\nmodule.exports = app => {\n  const routes = [\n    // version\n    { method: 'post', path: 'version/update', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/init', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/test', controller: version, middlewares: 'test' },\n  ];\n  return routes;\n};\n","module.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async init() {\n      await this.service.version.init(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async test() {\n      await this.service.version.test(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n","const version = require('./service/version.js');\nconst mail = require('./service/mail.js');\n\nmodule.exports = app => {\n  const services = {\n    version,\n    mail,\n  };\n  return services;\n};\n","module.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(options) {\n      if (options.version === 1) {\n        // create table: aMail\n        const sql = `\n          CREATE TABLE aMail (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            scene varchar(50) DEFAULT NULL,\n            status int(11) DEFAULT '0',\n            mailTo text DEFAULT NULL,\n            mailSubject text DEFAULT NULL,\n            message LONGTEXT DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n      }\n    }\n\n    async init(options) {\n      if (options.version === 1) {\n      }\n    }\n\n    async test() {\n    }\n\n  }\n\n  return Version;\n};\n","module.exports = app => {\n\n  class Mail extends app.Service {\n\n  }\n  return Mail;\n};\n","const mail = require('./model/mail.js');\n\nmodule.exports = app => {\n  const models = {\n    mail,\n  };\n  return models;\n};\n","module.exports = app => {\n  // const schemas = require('./config/validation/schemas.js')(app);\n  // socketio\n  const socketioMessageMail = require('./config/socketio/messageMail.js')(app);\n  const socketioChannelMail = require('./config/socketio/channelMail.js')(app);\n  const meta = {\n    base: {\n      atoms: {\n      },\n      functions: {\n      },\n    },\n    validation: {\n      validators: {\n      },\n      keywords: {},\n      schemas: {\n      },\n    },\n    socketio: {\n      messages: {\n        mail: socketioMessageMail,\n      },\n      channels: {\n        mail: socketioChannelMail,\n      },\n    },\n  };\n  return meta;\n};\n","const modelMailFn = require('../../model/mail.js');\n\nmodule.exports = app => {\n  async function onRender({ io, ctx, options, message, messageSync, messageClass }) {\n    const content = JSON.parse(message.content);\n    const modelMail = new (modelMailFn(ctx.app))(ctx);\n    const mail = await modelMail.get({ id: content.mailId });\n    return {\n      scene: mail.scene,\n      message: JSON.parse(mail.message),\n    };\n  }\n\n  const MessageMail = {\n    info: {\n      title: 'Mail',\n      persistence: false,\n      push: {\n        channels: [ 'a-mail:mail' ],\n      },\n    },\n    callbacks: {\n    },\n    channels: {\n      'a-mail:mail': {\n        onRender,\n      },\n    },\n  };\n  return MessageMail;\n};\n","const require3 = require('require3');\nconst nodemailer = require3('nodemailer');\nconst chalk = require3('chalk');\nconst boxen = require3('boxen');\n\nconst boxenOptions = { padding: 1, margin: 1, align: 'center', borderColor: 'yellow', borderStyle: 'round' };\n\nmodule.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  async function onPush({ io, ctx, options, message, messageSync, messageClass, pushContent }) {\n    // scene\n    let scene;\n    if (pushContent.scene === 'test') {\n      scene = await _createSceneTest();\n    } else {\n      scene = ctx.config.module(moduleInfo.relativeName).scenes[pushContent.scene];\n    }\n    // check if empty\n    if (!scene.transport.host) {\n      const message = chalk.keyword('orange')(ctx.text('mailhostNotConfigAlert'));\n      console.log('\\n' + boxen(message, boxenOptions));\n      return false;\n    }\n    // transporter\n    const transporter = nodemailer.createTransport(scene.transport, scene.defaults);\n    // send\n    const res = await transporter.sendMail(pushContent.message);\n    // log\n    if (pushContent.scene === 'test') {\n      const url = nodemailer.getTestMessageUrl(res);\n      const message = chalk.keyword('cyan')('Test Mail To: ')\n                        + chalk.keyword('yellow')(pushContent.message.to)\n                        + chalk.keyword('orange')('\\n' + url);\n      console.log('\\n' + boxen(message, boxenOptions));\n    }\n    // done\n    return true;\n  }\n\n  async function _createSceneTest() {\n    const account = await nodemailer.createTestAccount();\n    return {\n      transport: {\n        host: account.smtp.host,\n        port: account.smtp.port,\n        secure: account.smtp.secure,\n        auth: {\n          user: account.user,\n          pass: account.pass,\n        },\n        logger: false,\n        debug: false,\n      },\n      defaults: {\n        // sender info\n        from: 'Nodemailer <example@nodemailer.com>',\n      },\n    };\n  }\n\n  const ChannelMail = {\n    info: {\n      title: 'Mail',\n    },\n    callbacks: {\n      onPush,\n    },\n  };\n  return ChannelMail;\n};\n","module.exports = require(\"require3\");"],"sourceRoot":""}